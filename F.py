"""
После чая с печеньками ребята решили поиграть в игру. Дан набор строк одинаковой длины,
состоящих из маленьких латинских букв. Нужно определить, какое минимальное число
позиций в каждой из строк нужно удалить, чтобы буквы в строках, соответствующие каждому
индексу из оставшихся, были лексикографически отсортированы по неубыванию (то есть
последовательности, читающиеся сверху вниз, должны быть отсортированы по неубыванию).
Как происходит удаление - один столбец полностью берет и уничтожается.
Формат ввода
В первой строке записано число п - количество строк.
Во второй - - длина каждой из строк.
Оба числа не превосходят 1000.
В каждой из следующих и строк записана строка, состоящая из m строчных букв латинского
алфавита.
Формат вывода
Нужно вывести одно число - минимальное количество индексов, которые нужно удалить,
чтобы выполнялось указанное требование.

Ввод
3
3cba
daf
ghi

Вывод
1

Ввод
2
1
a
b

Вывод
0

"""

# Реализация по времени O(n*m) и по памяти O(1)

def solution(n, m, matrix):
    count = 0
    for i in range(m):
         for j in range(n-1):
             if matrix[j][i] > matrix[j+1][i]:
                 count += 1
                 break
    return count

def main():
    try:
        n = int(input())
        if n > 1000:
            raise ValueError
        m = int(input())
        if m > 1000:
            raise ValueError
        matrix = []
        for i in range(n):
                matrix.append(input())
        print(matrix)
        print(solution(n, m, matrix))
    except ValueError:
        print("Ошибка")
    
if __name__ == '__main__':
    main()